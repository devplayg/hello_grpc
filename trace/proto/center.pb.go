// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/center.proto

package trace

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HelloRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4acfdbf4d8b001b, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type HelloResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloResponse) Reset()         { *m = HelloResponse{} }
func (m *HelloResponse) String() string { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()    {}
func (*HelloResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4acfdbf4d8b001b, []int{1}
}

func (m *HelloResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloResponse.Unmarshal(m, b)
}
func (m *HelloResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloResponse.Marshal(b, m, deterministic)
}
func (m *HelloResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloResponse.Merge(m, src)
}
func (m *HelloResponse) XXX_Size() int {
	return xxx_messageInfo_HelloResponse.Size(m)
}
func (m *HelloResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HelloResponse proto.InternalMessageInfo

func (m *HelloResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Packet struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Packet) Reset()         { *m = Packet{} }
func (m *Packet) String() string { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()    {}
func (*Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4acfdbf4d8b001b, []int{2}
}

func (m *Packet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Packet.Unmarshal(m, b)
}
func (m *Packet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Packet.Marshal(b, m, deterministic)
}
func (m *Packet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Packet.Merge(m, src)
}
func (m *Packet) XXX_Size() int {
	return xxx_messageInfo_Packet.Size(m)
}
func (m *Packet) XXX_DiscardUnknown() {
	xxx_messageInfo_Packet.DiscardUnknown(m)
}

var xxx_messageInfo_Packet proto.InternalMessageInfo

func (m *Packet) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type UploadResult struct {
	Checksum             []byte   `protobuf:"bytes,1,opt,name=checksum,proto3" json:"checksum,omitempty"`
	Size                 uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadResult) Reset()         { *m = UploadResult{} }
func (m *UploadResult) String() string { return proto.CompactTextString(m) }
func (*UploadResult) ProtoMessage()    {}
func (*UploadResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4acfdbf4d8b001b, []int{3}
}

func (m *UploadResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadResult.Unmarshal(m, b)
}
func (m *UploadResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadResult.Marshal(b, m, deterministic)
}
func (m *UploadResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadResult.Merge(m, src)
}
func (m *UploadResult) XXX_Size() int {
	return xxx_messageInfo_UploadResult.Size(m)
}
func (m *UploadResult) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadResult.DiscardUnknown(m)
}

var xxx_messageInfo_UploadResult proto.InternalMessageInfo

func (m *UploadResult) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

func (m *UploadResult) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "trace.HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "trace.HelloResponse")
	proto.RegisterType((*Packet)(nil), "trace.Packet")
	proto.RegisterType((*UploadResult)(nil), "trace.UploadResult")
}

func init() {
	proto.RegisterFile("proto/center.proto", fileDescriptor_b4acfdbf4d8b001b)
}

var fileDescriptor_b4acfdbf4d8b001b = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x6b, 0xd4, 0x86, 0x72, 0x4a, 0x97, 0x03, 0xa1, 0x28, 0x30, 0x54, 0x9e, 0xc2, 0xe2,
	0x54, 0xfc, 0x59, 0x59, 0x28, 0x12, 0x23, 0x8a, 0xc4, 0x07, 0x70, 0xdd, 0x23, 0xa0, 0x3a, 0x71,
	0x88, 0x1d, 0x21, 0xf8, 0x4a, 0x7c, 0x49, 0x14, 0x3b, 0x41, 0xed, 0xc2, 0x76, 0xef, 0xf2, 0x2e,
	0x7e, 0xbf, 0x07, 0xd8, 0xb4, 0xc6, 0x99, 0x5c, 0x51, 0xed, 0xa8, 0x15, 0x5e, 0xe0, 0xcc, 0xb5,
	0x52, 0x51, 0x7a, 0x51, 0x1a, 0x53, 0x6a, 0xca, 0xfd, 0x72, 0xd3, 0xbd, 0xe6, 0x54, 0x35, 0xee,
	0x2b, 0x78, 0x78, 0x06, 0xf1, 0x13, 0x69, 0x6d, 0x0a, 0xfa, 0xe8, 0xc8, 0x3a, 0x4c, 0xe0, 0xb8,
	0x22, 0x6b, 0x65, 0x49, 0x09, 0x5b, 0xb2, 0xec, 0xa4, 0x18, 0x25, 0xbf, 0x82, 0xc5, 0xe0, 0xb4,
	0x8d, 0xa9, 0x2d, 0xfd, 0x63, 0xbd, 0x84, 0xe8, 0x59, 0xaa, 0x1d, 0x39, 0x44, 0x98, 0x6e, 0xa5,
	0x93, 0xde, 0x10, 0x17, 0x7e, 0xe6, 0xf7, 0x10, 0xbf, 0x34, 0xda, 0xc8, 0x6d, 0x41, 0xb6, 0xd3,
	0x0e, 0x53, 0x98, 0xab, 0x37, 0x52, 0x3b, 0xdb, 0x55, 0x83, 0xef, 0x4f, 0xf7, 0xf7, 0xf6, 0xfd,
	0x9b, 0x92, 0xa3, 0x25, 0xcb, 0xa6, 0x85, 0x9f, 0xaf, 0x7f, 0x18, 0xc0, 0x5a, 0x3a, 0xf9, 0xe0,
	0x59, 0xf1, 0x16, 0x66, 0x3e, 0x17, 0x9e, 0x0a, 0xcf, 0x2b, 0xf6, 0x79, 0xd2, 0xb3, 0xc3, 0x65,
	0x88, 0xce, 0x27, 0x78, 0x07, 0xf3, 0xb5, 0xf9, 0xac, 0xfb, 0x18, 0x78, 0x2e, 0x42, 0x43, 0x62,
	0x6c, 0x48, 0x3c, 0xf6, 0x0d, 0xa5, 0x8b, 0xe1, 0x36, 0xb0, 0xf0, 0xc9, 0x8a, 0xe1, 0x0a, 0xa2,
	0x90, 0x1d, 0x0f, 0x3f, 0xa6, 0xe3, 0xe3, 0xfb, 0x64, 0x7c, 0x92, 0xb1, 0x4d, 0xe4, 0x7f, 0x7a,
	0xf3, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xcb, 0xb4, 0x66, 0x2f, 0xa1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DataCenterClient is the client API for DataCenter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataCenterClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
	Download(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (DataCenter_DownloadClient, error)
	Upload(ctx context.Context, opts ...grpc.CallOption) (DataCenter_UploadClient, error)
}

type dataCenterClient struct {
	cc grpc.ClientConnInterface
}

func NewDataCenterClient(cc grpc.ClientConnInterface) DataCenterClient {
	return &dataCenterClient{cc}
}

func (c *dataCenterClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := c.cc.Invoke(ctx, "/trace.DataCenter/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataCenterClient) Download(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (DataCenter_DownloadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataCenter_serviceDesc.Streams[0], "/trace.DataCenter/Download", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataCenterDownloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DataCenter_DownloadClient interface {
	Recv() (*Packet, error)
	grpc.ClientStream
}

type dataCenterDownloadClient struct {
	grpc.ClientStream
}

func (x *dataCenterDownloadClient) Recv() (*Packet, error) {
	m := new(Packet)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataCenterClient) Upload(ctx context.Context, opts ...grpc.CallOption) (DataCenter_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataCenter_serviceDesc.Streams[1], "/trace.DataCenter/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataCenterUploadClient{stream}
	return x, nil
}

type DataCenter_UploadClient interface {
	Send(*Packet) error
	CloseAndRecv() (*UploadResult, error)
	grpc.ClientStream
}

type dataCenterUploadClient struct {
	grpc.ClientStream
}

func (x *dataCenterUploadClient) Send(m *Packet) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataCenterUploadClient) CloseAndRecv() (*UploadResult, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DataCenterServer is the server API for DataCenter service.
type DataCenterServer interface {
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
	Download(*empty.Empty, DataCenter_DownloadServer) error
	Upload(DataCenter_UploadServer) error
}

// UnimplementedDataCenterServer can be embedded to have forward compatible implementations.
type UnimplementedDataCenterServer struct {
}

func (*UnimplementedDataCenterServer) Hello(ctx context.Context, req *HelloRequest) (*HelloResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}
func (*UnimplementedDataCenterServer) Download(req *empty.Empty, srv DataCenter_DownloadServer) error {
	return status.Errorf(codes.Unimplemented, "method Download not implemented")
}
func (*UnimplementedDataCenterServer) Upload(srv DataCenter_UploadServer) error {
	return status.Errorf(codes.Unimplemented, "method Upload not implemented")
}

func RegisterDataCenterServer(s *grpc.Server, srv DataCenterServer) {
	s.RegisterService(&_DataCenter_serviceDesc, srv)
}

func _DataCenter_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataCenterServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/trace.DataCenter/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataCenterServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataCenter_Download_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DataCenterServer).Download(m, &dataCenterDownloadServer{stream})
}

type DataCenter_DownloadServer interface {
	Send(*Packet) error
	grpc.ServerStream
}

type dataCenterDownloadServer struct {
	grpc.ServerStream
}

func (x *dataCenterDownloadServer) Send(m *Packet) error {
	return x.ServerStream.SendMsg(m)
}

func _DataCenter_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataCenterServer).Upload(&dataCenterUploadServer{stream})
}

type DataCenter_UploadServer interface {
	SendAndClose(*UploadResult) error
	Recv() (*Packet, error)
	grpc.ServerStream
}

type dataCenterUploadServer struct {
	grpc.ServerStream
}

func (x *dataCenterUploadServer) SendAndClose(m *UploadResult) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataCenterUploadServer) Recv() (*Packet, error) {
	m := new(Packet)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _DataCenter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "trace.DataCenter",
	HandlerType: (*DataCenterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _DataCenter_Hello_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Download",
			Handler:       _DataCenter_Download_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Upload",
			Handler:       _DataCenter_Upload_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/center.proto",
}
